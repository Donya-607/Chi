//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   row_major float4x4 world_view_projection;// Offset:    0 Size:    64
//   row_major float4x4 world;          // Offset:   64 Size:    64 [unused]
//   float4 camPos;                     // Offset:  128 Size:    16 [unused]
//   
//   struct lineLight
//   {
//       
//       float4 pos;                    // Offset:  144
//       float4 direction;              // Offset:  160
//       float4 color;                  // Offset:  176
//
//   } line_light;                      // Offset:  144 Size:    48 [unused]
//   
//   struct Light
//   {
//       
//       float4 pos;                    // Offset:  192
//       float4 color;                  // Offset:  208
//       float4 attenuate;              // Offset:  224
//
//   } pntLight[5];                     // Offset:  192 Size:   240 [unused]
//   
//   struct Material
//   {
//       
//       float4 ambient;                // Offset:  432
//       float4 diffuse;                // Offset:  448
//       float4 specular;               // Offset:  464
//
//   } material;                        // Offset:  432 Size:    48 [unused]
//   float4 judge_color;                // Offset:  480 Size:    16 [unused]
//   float4 screen_size;                // Offset:  496 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuse_map_sample_state          sampler      NA          NA             s0      1 
// diffuse_map                       texture  float4          2d             t0      1 
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float      w
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.pos.x; v1.y <- pin.pos.y; v1.z <- pin.pos.z; v1.w <- pin.pos.w; 
//   v2.x <- pin.color.x; v2.y <- pin.color.y; v2.z <- pin.color.z; v2.w <- pin.color.w; 
//   v3.x <- pin.texcoord.x; v3.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 7 "D:\Develop\Chi\Chi\Chi\Chi\obj_z_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.x, v3.xyxx, t0.wxyz, s0
mul r0.x, r0.x, v2.w  // r0.x <- sampleColor.w

#line 9
mul r0.yz, v1.xxxx, cb0[0].zzwz
mul r1.xy, v1.yyyy, cb0[1].zwzz
add r0.yz, r0.yyzy, r1.xxyx
mul r1.xy, v1.zzzz, cb0[2].zwzz
add r0.yz, r0.yyzy, r1.xxyx
mul r1.xy, v1.wwww, cb0[3].zwzz
add r0.yz, r0.yyzy, r1.xxyx  // r0.y <- screen_pos.z; r0.z <- screen_pos.w

#line 10
div r0.yzw, r0.yyyy, r0.zzzz  // r0.w <- pos

#line 11
mov o0.xyz, r0.yzwy
mov o0.w, r0.x
ret 
// Approximately 13 instruction slots used
