//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   float4 status;                     // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// DecalSampler                      sampler      NA          NA             s0      1 
// DiffuseTexture                    texture  float4          2d             t0      1 
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.Tex.x; v1.y <- input.Tex.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 8 "C:\Users\2180082.MAETEL\Desktop\„ÉÅE"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 10
add r0.xyz, r0.xyzx, cb0[0].xxxx

#line 12
mov r1.xyz, l(-0.500000,-0.500000,-0.500000,-0.000000)
add r0.xyz, r0.xyzx, r1.xyzx
mul r0.xyz, r0.xyzx, cb0[0].yyyy
add r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 14
add r1.x, r0.y, r0.x
add r1.x, r0.z, r1.x
itof r1.y, l(3)
div r1.x, r1.x, r1.y  // r1.x <- avr

#line 15
mov r1.yzw, -r1.xxxx
add r0.xyz, r0.xyzx, r1.yzwy
mul r0.xyz, r0.xyzx, cb0[0].zzzz
add r0.xyz, r1.xxxx, r0.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 18
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 17 instruction slots used
