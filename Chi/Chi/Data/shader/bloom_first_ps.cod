//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// DecalSampler                      sampler      NA          NA             s0      1 
// DiffuseTexture                    texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float       
// TEXCOORD                 2   xy          4     NONE   float       
// TEXCOORD                 3   xy          5     NONE   float       
// TEXCOORD                 4   xy          6     NONE   float       
// TEXCOORD                 5   xy          7     NONE   float       
// TEXCOORD                 6   xy          8     NONE   float       
// TEXCOORD                 7   xy          9     NONE   float       
// TEXCOORD                 8   xy         10     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 1
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.Color.x; v1.y <- input.Color.y; v1.z <- input.Color.z; v1.w <- input.Color.w; 
//   v2.x <- input.Tex[0].x; v2.y <- input.Tex[0].y; 
//   v3.x <- input.Tex[1].x; v3.y <- input.Tex[1].y; 
//   v4.x <- input.Tex[2].x; v4.y <- input.Tex[2].y; 
//   v5.x <- input.Tex[3].x; v5.y <- input.Tex[3].y; 
//   v6.x <- input.Tex[4].x; v6.y <- input.Tex[4].y; 
//   v7.x <- input.Tex[5].x; v7.y <- input.Tex[5].y; 
//   v8.x <- input.Tex[6].x; v8.y <- input.Tex[6].y; 
//   v9.x <- input.Tex[7].x; v9.y <- input.Tex[7].y; 
//   v10.x <- input.Tex[8].x; v10.y <- input.Tex[8].y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 8 "D:\Git\fps_shooting\Chi\Chi\Chi\bloom_first_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s0  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 10
mov o0.xyzw, r0.xyzw
ret 
// Approximately 3 instruction slots used
