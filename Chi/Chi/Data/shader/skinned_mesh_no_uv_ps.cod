//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   row_major float4x4 world_view_projection;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 world;          // Offset:   64 Size:    64 [unused]
//   float4 camPos;                     // Offset:  128 Size:    16
//   
//   struct lineLight
//   {
//       
//       float4 direction;              // Offset:  144
//       float4 color;                  // Offset:  160
//
//   } line_light;                      // Offset:  144 Size:    32
//   
//   struct Light
//   {
//       
//       float4 pos;                    // Offset:  176
//       float4 color;                  // Offset:  192
//       float4 diffuse;                // Offset:  208
//       float4 specular;               // Offset:  224
//       float4 attenuate;              // Offset:  240
//
//   } pntLight[5];                     // Offset:  176 Size:   400
//   
//   struct Material
//   {
//       
//       float4 ambient;                // Offset:  576
//       float4 diffuse;                // Offset:  592
//       float4 specular;               // Offset:  608
//
//   } material;                        // Offset:  576 Size:    48
//   row_major float4x4 bone_transforms[32];// Offset:  624 Size:  2048 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// CONSTANT_BUFFER                   cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// POSITION                 0   xyzw        1     NONE   float       
// COLOR                    0   xyzw        2     NONE   float   xyzw
// NORMAL                   0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer cb0[39], dynamicIndexed
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_output o0.xyzw
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.posw.x; v1.y <- pin.posw.y; v1.z <- pin.posw.z; v1.w <- pin.posw.w; 
//   v2.x <- pin.color.x; v2.y <- pin.color.y; v2.z <- pin.color.z; v2.w <- pin.color.w; 
//   v3.x <- pin.normal.x; v3.y <- pin.normal.y; v3.z <- pin.normal.z; v3.w <- pin.normal.w; 
//   v4.x <- pin.texcoord.x; v4.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 6 "D:\äwçZ\library\myLib\MyLiblary latest\skinned_mesh_no_uv_ps.hl"
mov r0.xyz, -v0.xyzx
add r0.xyz, r0.xyzx, cb0[8].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- V.x; r0.y <- V.y; r0.z <- V.z

#line 9
mov r1.xyz, v2.xyzx  // r1.x <- ambientColor.x; r1.y <- ambientColor.y; r1.z <- ambientColor.z
mov r2.xyzw, -cb0[9].xyzw
dp4 r0.w, r2.xyzw, r2.xyzw
rsq r0.w, r0.w
mul r2.xyzw, r0.wwww, r2.xyzw  // r2.x <- _L.x; r2.y <- _L.y; r2.z <- _L.z; r2.w <- _L.w
mul r3.xyz, r1.xyzx, cb0[10].xyzx
itof r0.w, l(0)
dp4 r1.w, r2.xyzw, v3.xyzw
max r0.w, r0.w, r1.w
mul r2.xyz, r0.wwww, r3.xyzx  // r2.x <- _color.x; r2.y <- _color.y; r2.z <- _color.z
mov r0.w, l(0)  // r0.w <- i
mov r3.xyz, r2.xyzx  // r3.x <- _color.x; r3.y <- _color.y; r3.z <- _color.z
mov r1.w, r0.w  // r1.w <- i
loop 
  ilt r2.w, r1.w, l(5)
  breakc_z r2.w
  imul null, r2.w, r1.w, l(5)
  itof r3.w, l(0)
  eq r2.w, r3.w, cb0[r2.w + 11].w
  if_nz r2.w
    iadd r1.w, r1.w, l(1)
    continue 
  endif 
  imul null, r2.w, r1.w, l(5)
  mov r4.xyz, -v0.xyzx
  add r4.xyz, r4.xyzx, cb0[r2.w + 11].xyzx  // r4.x <- L.x; r4.y <- L.y; r4.z <- L.z
  dp3 r2.w, r4.xyzx, r4.xyzx
  sqrt r2.w, r2.w  // r2.w <- D.x

#line 20
  dp3 r3.w, r4.xyzx, r4.xyzx
  rsq r3.w, r3.w
  mul r4.xyz, r3.wwww, r4.xyzx
  mul r5.xyz, v3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
  dp3 r3.w, v3.xyzx, r4.xyzx
  mul r5.xyz, r3.wwww, r5.xyzx
  mov r6.xyz, -r4.xyzx
  add r5.xyz, r5.xyzx, r6.xyzx  // r5.x <- R.x; r5.y <- R.y; r5.z <- R.z
  imul null, r3.w, r1.w, l(5)
  imul null, r4.w, r1.w, l(5)
  mul r4.w, r2.w, cb0[r4.w + 15].y
  add r3.w, r4.w, cb0[r3.w + 15].x
  imul null, r4.w, r1.w, l(5)
  mul r4.w, r2.w, cb0[r4.w + 15].z
  mul r2.w, r2.w, r4.w
  add r2.w, r2.w, r3.w
  div r2.w, l(1.000000), r2.w
  max r2.w, r2.w, l(0.000000)
  min r2.w, r2.w, l(1.000000)  // r2.w <- A
  imul null, r3.w, r1.w, l(5)
  mul r6.xyz, cb0[37].xyzx, cb0[r3.w + 13].xyzx
  dp3 r3.w, r4.xyzx, v3.xyzx
  max r3.w, r3.w, l(0.000000)
  min r3.w, r3.w, l(1.000000)
  mul r4.xyz, r3.wwww, r6.xyzx
  mul r4.xyz, r2.wwww, r4.xyzx  // r4.x <- diffuseColor.x; r4.y <- diffuseColor.y; r4.z <- diffuseColor.z
  dp3 r3.w, r5.xyzx, r0.xyzx
  max r3.w, r3.w, l(0.000000)
  min r3.w, r3.w, l(1.000000)
  log r3.w, r3.w
  mul r3.w, r3.w, cb0[38].w
  exp r3.w, r3.w
  mul r5.xyz, r3.wwww, cb0[38].xyzx
  imul null, r3.w, r1.w, l(5)
  mul r5.xyz, r5.xyzx, cb0[r3.w + 14].xyzx
  mul r5.xyz, r2.wwww, r5.xyzx  // r5.x <- specularColor.x; r5.y <- specularColor.y; r5.z <- specularColor.z
  add r4.xyz, r4.xyzx, r5.xyzx
  max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  add r3.xyz, r3.xyzx, r4.xyzx

#line 13
  iadd r1.w, r1.w, l(1)

#line 26
endloop 
max r0.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.xyz, r0.xyzx, r3.xyzx  // r0.x <- _color.x; r0.y <- _color.y; r0.z <- _color.z
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mov o0.w, v2.w
ret 
// Approximately 82 instruction slots used
