//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   float screenWidth;                 // Offset:    0 Size:     4
//   float screenHeight;                // Offset:    4 Size:     4
//   float blur;                        // Offset:    8 Size:     4
//   float power;                       // Offset:   12 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
// TEXCOORD                 3   xy          5     NONE   float   xy  
// TEXCOORD                 4   xy          6     NONE   float   xy  
// TEXCOORD                 5   xy          7     NONE   float   xy  
// TEXCOORD                 6   xy          8     NONE   float   xy  
// TEXCOORD                 7   xy          9     NONE   float   xy  
// TEXCOORD                 8   xy         10     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[1], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xy
dcl_output o4.xy
dcl_output o5.xy
dcl_output o6.xy
dcl_output o7.xy
dcl_output o8.xy
dcl_output o9.xy
dcl_output o10.xy
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.Color.x; v1.y <- input.Color.y; v1.z <- input.Color.z; v1.w <- input.Color.w; 
//   v2.x <- input.Tex.x; v2.y <- input.Tex.y; 
//   o10.x <- <main return value>.Tex[8].x; o10.y <- <main return value>.Tex[8].y; 
//   o9.x <- <main return value>.Tex[7].x; o9.y <- <main return value>.Tex[7].y; 
//   o8.x <- <main return value>.Tex[6].x; o8.y <- <main return value>.Tex[6].y; 
//   o7.x <- <main return value>.Tex[5].x; o7.y <- <main return value>.Tex[5].y; 
//   o6.x <- <main return value>.Tex[4].x; o6.y <- <main return value>.Tex[4].y; 
//   o5.x <- <main return value>.Tex[3].x; o5.y <- <main return value>.Tex[3].y; 
//   o4.x <- <main return value>.Tex[2].x; o4.y <- <main return value>.Tex[2].y; 
//   o3.x <- <main return value>.Tex[1].x; o3.y <- <main return value>.Tex[1].y; 
//   o2.x <- <main return value>.Tex[0].x; o2.y <- <main return value>.Tex[0].y; 
//   o1.x <- <main return value>.Color.x; o1.y <- <main return value>.Color.y; o1.z <- <main return value>.Color.z; o1.w <- <main return value>.Color.w; 
//   o0.x <- <main return value>.Position.x; o0.y <- <main return value>.Position.y; o0.z <- <main return value>.Position.z; o0.w <- <main return value>.Position.w
//
#line 8 "D:\Develop\Chi\Chi\Chi\Chi\bloom_vs.hlsl"
mov r0.xyzw, v0.xyzw  // r0.x <- output.Position.x; r0.y <- output.Position.y; r0.z <- output.Position.z; r0.w <- output.Position.w

#line 9
mov r1.xyzw, v1.xyzw  // r1.x <- output.Color.x; r1.y <- output.Color.y; r1.z <- output.Color.z; r1.w <- output.Color.w

#line 10
itof r2.x, l(1)
div r2.x, r2.x, cb0[0].x  // r2.x <- dw

#line 11
itof r2.z, l(1)
div r3.y, r2.z, cb0[0].y  // r3.y <- dh

#line 13
mov r2.zw, v2.xxxy  // r2.z <- output.Tex[0].x; r2.w <- output.Tex[0].y

#line 14
mov r4.x, -r2.x
mov r4.y, -r3.y
mul r3.zw, r4.xxxy, cb0[0].zzzz
add r3.zw, r3.zzzw, v2.xxxy  // r3.z <- output.Tex[1].x; r3.w <- output.Tex[1].y

#line 15
mov r4.y, -r3.y
mov r4.x, l(0)
mul r4.xy, r4.xyxx, cb0[0].zzzz
add r4.xy, r4.xyxx, v2.xyxx  // r4.x <- output.Tex[2].x; r4.y <- output.Tex[2].y

#line 16
mov r2.y, -r3.y
mul r4.zw, r2.xxxy, cb0[0].zzzz
add r4.zw, r4.zzzw, v2.xxxy  // r4.z <- output.Tex[3].x; r4.w <- output.Tex[3].y

#line 17
mov r2.y, -r2.x
mul r5.x, r2.y, cb0[0].z
mul r5.y, cb0[0].z, l(0.000000)
add r5.xy, r5.xyxx, v2.xyxx  // r5.x <- output.Tex[4].x; r5.y <- output.Tex[4].y

#line 18
mul r6.x, r2.x, cb0[0].z
mul r6.y, cb0[0].z, l(0.000000)
add r5.zw, r6.xxxy, v2.xxxy  // r5.z <- output.Tex[5].x; r5.w <- output.Tex[5].y

#line 19
mov r3.x, -r2.x
mul r6.xy, r3.xyxx, cb0[0].zzzz
add r6.xy, r6.xyxx, v2.xyxx  // r6.x <- output.Tex[6].x; r6.y <- output.Tex[6].y

#line 20
mov r3.x, l(0)
mul r6.zw, r3.xxxy, cb0[0].zzzz
add r6.zw, r6.zzzw, v2.xxxy  // r6.z <- output.Tex[7].x; r6.w <- output.Tex[7].y

#line 21
mov r3.x, r2.x
mul r2.xy, r3.xyxx, cb0[0].zzzz
add r2.xy, r2.xyxx, v2.xyxx  // r2.x <- output.Tex[8].x; r2.y <- output.Tex[8].y

#line 24
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r1.xyzw
mov o2.xy, r2.zwzz
mov o3.xy, r3.zwzz
mov o4.xy, r4.xyxx
mov o5.xy, r4.zwzz
mov o6.xy, r5.xyxx
mov o7.xy, r5.zwzz
mov o8.xy, r6.xyxx
mov o9.xy, r6.zwzz
mov o10.xy, r2.xyxx
ret 
// Approximately 46 instruction slots used
